#!/bin/bash

# List of Pokémon
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Base URL for the Pokémon API
BASE_URL="https://pokeapi.co/api/v2/pokemon"

# Maximum number of retries
MAX_RETRIES=3

# Function to fetch data for a single Pokémon
fetch_pokemon_data() {
  local POKEMON=$1
  local URL="$BASE_URL/$POKEMON"
  local OUTPUT_FILE="$POKEMON.json"
  local RETRY_COUNT=0
  local SUCCESS=false

  while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
    curl -s -o "$OUTPUT_FILE" "$URL"
    if [ $? -eq 0 ]; then
      echo "Data for $POKEMON saved to $OUTPUT_FILE"
      SUCCESS=true
      break
    else
      echo "Failed to retrieve data for $POKEMON. Attempt $((RETRY_COUNT + 1)) of $MAX_RETRIES."
      RETRY_COUNT=$((RETRY_COUNT + 1))
      sleep 2
    fi
  done

  if [ "$SUCCESS" = false ]; then
    echo "Failed to retrieve data for $POKEMON after $MAX_RETRIES attempts." >> errors.txt
  fi
}

# Looping through each Pokémon in the list and fetch data in parallel
for POKEMON in "${POKEMON_LIST[@]}"; do
  fetch_pokemon_data "$POKEMON" &
done

# Waiting for all background processes to complete
wait

echo "All data retrieval processes completed."
